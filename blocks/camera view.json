[{"name":"ClassVoidStartCameraX","palette":"133","spec":"StartCameraX ViewOnClick %m.view SaveToPath %s ","typeName":"","type":"f","code":"}\r\n    private void startCamera() {\n        //make sure there isn\u0027t another camera instance running before starting\n        CameraX.unbindAll();\n\n        /* start preview */\n        int aspRatioW \u003d view_finder.getWidth(); //get width of screen\n        int aspRatioH \u003d view_finder.getHeight(); //get height\n        Rational asp \u003d new Rational (aspRatioW, aspRatioH); //aspect ratio\n        Size screen \u003d new Size(aspRatioW, aspRatioH); //size of the screen\n\n        //config obj for preview/viewfinder thingy.\n        PreviewConfig pConfig \u003d new PreviewConfig.Builder().setTargetAspectRatio(asp).setTargetResolution(screen).build();\n        Preview preview \u003d new Preview(pConfig); //lets build it\n\n        preview.setOnPreviewOutputUpdateListener(\n                new Preview.OnPreviewOutputUpdateListener() {\n\t                    //to update the surface texture we have to destroy it first, then re-add it\n\t                    @Override\n\t                    public void onUpdated(Preview.PreviewOutput output){\n\t\t                        ViewGroup parent \u003d (ViewGroup) view_finder.getParent();\n\t\t                        parent.removeView(view_finder);\n\t\t                        parent.addView(view_finder, 0);\n\t\t\n\t\t                        view_finder.setSurfaceTexture(output.getSurfaceTexture());\n\t\t                        updateTransform();\n\t\t                    }\n\t                });\n\n        /* image capture */\n\n        //config obj, selected capture mode\n        ImageCaptureConfig imgCapConfig \u003d new ImageCaptureConfig.Builder().setCaptureMode(ImageCapture.CaptureMode.MIN_LATENCY)\n                .setTargetRotation(getWindowManager().getDefaultDisplay().getRotation()).build();\n        final ImageCapture imgCap \u003d new ImageCapture(imgCapConfig);\n\n        findViewById(R.id.%1$s).setOnClickListener(new View.OnClickListener() {\n\t            @Override\n\t            public void onClick(View v) {\n\t\t                File file \u003d new File(%2$s + \"/\" + System.currentTimeMillis() + \".jpg\");\n\t\t                imgCap.takePicture(file, new ImageCapture.OnImageSavedListener() {\n\t\t\t                    @Override\n\t\t\t                    public void onImageSaved(@NonNull File file) {\n\t\t\t\t                        String msg \u003d \"Photo capture succeeded: \" + file.getAbsolutePath();\n\t\t\t\t                        Toast.makeText(getBaseContext(), msg,Toast.LENGTH_LONG).show();\n\t\t\t\t                    }\n\t\t\t\n\t\t\t                    @Override\n\t\t\t                    public void onError(@NonNull ImageCapture.UseCaseError useCaseError, @NonNull String message, @Nullable Throwable cause) {\n\t\t\t\t                        String msg \u003d \"Photo capture failed: \" + message;\n\t\t\t\t                        Toast.makeText(getBaseContext(), msg,Toast.LENGTH_LONG).show();\n\t\t\t\t                        if(cause !\u003d null){\n\t\t\t\t\t                            cause.printStackTrace();\n\t\t\t\t\t                        }\n\t\t\t\t                    }\n\t\t\t                });\n\t\t            }\n\t        });\n\n        /* image analyser */\n\n        ImageAnalysisConfig imgAConfig \u003d new ImageAnalysisConfig.Builder().setImageReaderMode(ImageAnalysis.ImageReaderMode.ACQUIRE_LATEST_IMAGE).build();\n        ImageAnalysis analysis \u003d new ImageAnalysis(imgAConfig);\n\n        analysis.setAnalyzer(\n            new ImageAnalysis.Analyzer(){\n\t                @Override\n\t                public void analyze(ImageProxy image, int rotationDegrees){\n\t\t                    //y\u0027all can add code to analyse stuff here idek go wild.\n\t\t                }\n\t            });\n\n        //bind to lifecycle:\n        CameraX.bindToLifecycle((LifecycleOwner)this, analysis, imgCap, preview);\n    }\n\n    private void updateTransform(){\n        /*\n        * compensates the changes in orientation for the viewfinder, bc the rest of the layout stays in portrait mode.\n        * methinks :thonk:\n        * imgCap does this already, this class can be commented out or be used to optimise the preview\n        */\n        Matrix mx \u003d new Matrix();\n        float w \u003d view_finder.getMeasuredWidth();\n        float h \u003d view_finder.getMeasuredHeight();\n\n        float centreX \u003d w / 2f; //calc centre of the viewfinder\n        float centreY \u003d h / 2f;\n\n        int rotationDgr;\n        int rotation \u003d (int)view_finder.getRotation(); //cast to int bc switches don\u0027t like floats\n\n        switch(rotation){ //correct output to account for display rotation\n\t            case Surface.ROTATION_0:\n\t                rotationDgr \u003d 0;\n\t                break;\n\t            case Surface.ROTATION_90:\n\t                rotationDgr \u003d 90;\n\t                break;\n\t            case Surface.ROTATION_180:\n\t                rotationDgr \u003d 180;\n\t                break;\n\t            case Surface.ROTATION_270:\n\t                rotationDgr \u003d 270;\n\t                break;\n\t            default:\n\t                return;\n\t        }\n\n        mx.postRotate((float)rotationDgr, centreX, centreY);\n        view_finder.setTransform(mx); //apply transformations to textureview\n    }\r\nprivate void foo() {","color":"#FF00695C"},{"name":"CameraXinit","palette":"133","spec":"Initialize CameraX onCreate","typeName":"","type":" ","code":"startCamera();","color":"#FF00695C"}]