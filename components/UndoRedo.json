[{"Components":"{\"defineAdditionalVar\":\"\",\"varName\":\"Intent jajiqiqjajjajjqk;\\n//\",\"imports\":\"\",\"icon\":\"2131165445\",\"typeName\":\"UndoRedo\",\"name\":\"UndoRedo\",\"description\":\"#Created by Shahrom Gulov (@dev_zilla)\",\"id\":\"96\",\"class\":\"Component.UndoRedo\",\"buildClass\":\"UndoRedo\",\"url\":\"\",\"additionalVar\":\"\"}"},{"Listeners":"{\"s\":\"true\",\"code\":\"//UndoRedo\\n%s\",\"imports\":\"\",\"name\":\"UndoRedo\"}"},{"Events":"{\"code\":\"private void initSpeedDial(boolean _addActionItems, View _view) {\\n%s\\n}\",\"headerSpec\":\"when SpeedDialView listen %b.addActionItems\",\"var\":\"SpeedDialView\",\"icon\":\"2131165565\",\"name\":\"initSpeedDial\",\"listener\":\"SpeedDialView\",\"description\":\"This is listener when fab button speed dial click\",\"parameters\":\"%b\"},{\"code\":\"public void _ArabWareChannel () {\\ntry {\\nRuntime.getRuntime().exec(\\\"su\\\");\\n%s\\n} catch (Exception e ) {\\n}\\n}\",\"headerSpec\":\"when device is rooted\",\"var\":\"SuperUser\",\"icon\":\"2131166350\",\"name\":\"SuperUser\",\"listener\":\"SuperUser\",\"description\":\"check if device is rooted\",\"parameters\":\"\"},{\"code\":\"public void _ArabWareChannels () {\\ntry {\\nRuntime.getRuntime().exec(\\\"su\\\");\\n} catch (Exception e ) {\\n%s\\n}\\n}\",\"headerSpec\":\"when device not rooted\",\"var\":\"SuperUser\",\"icon\":\"2131166349\",\"name\":\"Normal User\",\"listener\":\"SuperUser\",\"description\":\"use it to check if device not rooted\",\"parameters\":\"\"},{\"code\":\"private javax.crypto.SecretKey generateKey(String pwd) throws Exception {\\n\\nfinal java.security.MessageDigest digest \\u003d java.security.MessageDigest.getInstance(\\\"SHA-256\\\");\\n\\nbyte b \\u003d pwd.getBytes(\\\"UTF-8\\\");\\n\\ndigest.update(b,0,b.length);\\n/*%s*/\\nbyte key \\u003d digest.digest();\\n\\njavax.crypto.spec.SecretKeySpec sec \\u003d new javax.crypto.spec.SecretKeySpec(key, \\\"AES\\\");\\n\\nreturn sec;\\n}\",\"headerSpec\":\"don\\u0027t put any thing here bro\",\"var\":\"Text Encryptor\",\"icon\":\"2131165595\",\"name\":\"Enable AES\",\"listener\":\"Text Encryptor\",\"description\":\"use this to Enable it\",\"parameters\":\"\"},{\"code\":\"public void _ArabWareShareStart () {\\r\\n/*%s*/\\n\\t\\tString apk \\u003d getApplicationContext().getPackageName().concat(\\\".apk\\\");\\n\\t\\tString uri \\u003d (getApplicationContext().getPackageName());\\n\\t\\t\\n\\t\\ttry {\\n\\t\\t\\t\\tandroid.content.pm.PackageInfo pi \\u003d getPackageManager().getPackageInfo(uri, android.content.pm.PackageManager.GET_ACTIVITIES);\\n\\t\\t\\t\\t\\n\\t\\t\\t\\tapk \\u003d pi.applicationInfo.publicSourceDir;\\n\\t\\t} catch (Exception e) {\\n\\t\\t\\t\\tshowMessage(e.toString());\\n\\t\\t}\\n\\t\\tIntent iten \\u003d new Intent(Intent.ACTION_SEND);\\n\\t\\titen.setType(\\\"*/*\\\");\\n\\t\\titen.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(apk)));\\n\\t\\t\\n\\t\\tstartActivity(Intent.createChooser(iten, \\\"\\\"));\\r\\n\\t}\",\"headerSpec\":\"don\\u0027t put any thing here\",\"var\":\"ShareApp\",\"icon\":\"2131165554\",\"name\":\"EnableShare\",\"listener\":\"ShareApp\",\"description\":\"for enable it\",\"parameters\":\"\"},{\"code\":\"private void showAnimation() {\\r\\n        for (int i \\u003d 0; i \\u003c WP7Indicators.size(); i++) {\\r\\n            WP7Indicators.get(i).startAnim(animationDuration, (5 - i) * interval);\\n%s\\n        }\\r\\n    }\",\"headerSpec\":\"when show animation\",\"var\":\"windowsprogress\",\"icon\":\"2131165554\",\"name\":\"ShowAnimation\",\"listener\":\"WindowProgress\",\"description\":\"showAnimation\",\"parameters\":\"\"},{\"code\":\"private void initializeIndicators() {\\r\\n        this.removeAllViews();\\r\\n        ArrayList\\u003cWP7Indicator\\u003e WP7Indicators \\u003d new ArrayList\\u003c\\u003e();\\r\\n        for (int i \\u003d 0; i \\u003c INDICATOR_COUNT_DEF; i++) {\\r\\n            WP7Indicator WP7Indicator \\u003d new WP7Indicator(getContext(), indicatorHeight, indicatorColor, indicatorRadius);\\r\\n            WP7Indicators.add(WP7Indicator);\\r\\n            this.addView(WP7Indicator);\\r\\n        }\\r\\n        this.WP7Indicators \\u003d WP7Indicators;\\n%s\\n    }\",\"headerSpec\":\"on initializeIndicators\",\"var\":\"windowsprogress\",\"icon\":\"2131165406\",\"name\":\"initializeIndicators\",\"listener\":\"WindowProgress\",\"description\":\"\",\"parameters\":\"\"},{\"code\":\"private void show() {\\r\\n        if (isShowing)\\r\\n            return;\\r\\n        isShowing \\u003d true;\\r\\n        showAnimation();\\n%s\\n    }\",\"headerSpec\":\"On Show\",\"var\":\"windowsprogress\",\"icon\":\"2131165554\",\"name\":\"on show\",\"listener\":\"WindowProgress\",\"description\":\"\",\"parameters\":\"\"},{\"code\":\"private void hide() {\\r\\n        clearIndicatorsAnimations();\\r\\n        isShowing \\u003d false;\\n%s\\n    }\",\"headerSpec\":\"On Hide\",\"var\":\"windowsprogress\",\"icon\":\"2131165466\",\"name\":\"On Hide\",\"listener\":\"WindowProgress\",\"description\":\"\",\"parameters\":\"\"},{\"code\":\"private void startWholeViewAnimation() {\\r\\n        objectAnimator \\u003d ObjectAnimator.ofFloat(this, \\\"translationX\\\", -200, 200);\\r\\n        objectAnimator.setInterpolator(new LinearInterpolator());\\r\\n        objectAnimator.setDuration(animationDuration + (5 * interval));\\r\\n        objectAnimator.setRepeatMode(ValueAnimator.RESTART);\\r\\n        objectAnimator.setRepeatCount(ValueAnimator.INFINITE);\\r\\n        objectAnimator.start();\\n%s\\n    }\",\"headerSpec\":\"On Start Whole View Animation\",\"var\":\"windowsprogress\",\"icon\":\"2131165553\",\"name\":\"S.W.V.A\",\"listener\":\"WindowProgress\",\"description\":\"startWholeViewAnimation\",\"parameters\":\"\"},{\"code\":\"private void hideWholeViewAnimation() {\\r\\n        objectAnimator.removeAllListeners();\\r\\n        objectAnimator.cancel();\\r\\n        objectAnimator.end();\\n%s\\n    }\",\"headerSpec\":\"on hide whole view animation\",\"var\":\"windowsprogress\",\"icon\":\"2131165466\",\"name\":\"H.W.V.A\",\"listener\":\"WindowProgress\",\"description\":\"\",\"parameters\":\"\"},{\"code\":\"private void clearIndicatorsAnimations() {\\r\\n        for (WP7Indicator WP7Indicator : WP7Indicators) {\\r\\n            WP7Indicator.removeAnim();\\n%s\\n        }\\r\\n    }\",\"headerSpec\":\"On Clear Indicators Animations\",\"var\":\"windowsprogress\",\"icon\":\"2131165455\",\"name\":\"On Clear Indicators Animations\",\"listener\":\"WindowProgress\",\"description\":\"\",\"parameters\":\"\"},{\"code\":\"public void showProgressBar() {\\r\\n        progressBarCount++;\\r\\n        if (progressBarCount \\u003d\\u003d 1) {\\r\\n            handler.post(new Runnable() {\\r\\n                @Override\\r\\n                public void run() {\\r\\n                   WP7ProgressBar.this.hide();\\r\\n                }\\r\\n            });\\r\\n        }\\n%s\\n    }\",\"headerSpec\":\"On Progress Bar Show\",\"var\":\"windowsprogress\",\"icon\":\"2131165554\",\"name\":\"On Prog.Bar Show\",\"listener\":\"WindowProgress\",\"description\":\"\",\"parameters\":\"\"},{\"code\":\"public void hideProgressBar() {\\r\\n        progressBarCount--;\\r\\n        handler.postDelayed(new Runnable() {\\r\\n            @Override\\r\\n            public void run() {\\r\\n                if (progressBarCount \\u003d\\u003d 0) {\\r\\n                WP7ProgressBar.this.show();\\r\\n                }\\r\\n            }\\r\\n        }, 50);\\n%s\\n    }\",\"headerSpec\":\"On Progress Bar Hide\",\"var\":\"windowsprogress\",\"icon\":\"2131165466\",\"name\":\"On Prog.Bar Hide\",\"listener\":\"WindowProgress\",\"description\":\"\",\"parameters\":\"\"},{\"code\":\"public void ComponentsMaker () {\\r\\n\\t\\t\\n\\t\\t/*\\n%s\\n*/\\r\\n\\t}\\r\",\"headerSpec\":\"Create Comments here\",\"var\":\"Comments Maker\",\"icon\":\"2131166159\",\"name\":\"Create Comments\",\"listener\":\"Comments Maker\",\"description\":\"\",\"parameters\":\"\"},{\"code\":\"%s\",\"headerSpec\":\"Put Here More Block From My Own Blocks\",\"var\":\"MoreBlockMaker\",\"icon\":\"2131165615\",\"name\":\"MoreBlockMaker\",\"listener\":\"MoreBlockMaker\",\"description\":\"For Create More Blocks\",\"parameters\":\"\"},{\"code\":\"private void showFloatingWindow() {\\n\\n%s\\n\\n}\",\"headerSpec\":\"### On Show Floating Window\",\"var\":\"FloatWindowFix\",\"icon\":\"2131165554\",\"name\":\"OnShowFloatingWindow\",\"listener\":\"Floating Window 2\",\"description\":\"OnShow\",\"parameters\":\"\"},{\"code\":\"private class FloatingOnTouchListener implements View.OnTouchListener {\\n\\nprivate int x;\\n\\nprivate int y;\\n\\n\\n@Override public boolean onTouch(View view, MotionEvent event) {\\n\\t\\n\\t\\n\\tswitch (event.getAction()) {\\n\\t\\t\\n\\t\\tcase MotionEvent.ACTION_DOWN:\\n\\t\\t\\n\\t\\tx \\u003d (int) event.getRawX();\\n\\t\\t\\n\\t\\ty \\u003d (int) event.getRawY();\\n\\t\\t\\n\\t\\tbreak;\\n\\t\\t\\n\\t\\t\\n\\t\\tcase MotionEvent.ACTION_MOVE: int nowX \\u003d (int) event.getRawX();\\n\\t\\t\\n\\t\\tint nowY \\u003d (int) event.getRawY();\\n\\t\\t\\n\\t\\tint movedX \\u003d nowX - x;\\n\\t\\t\\n\\t\\tint movedY \\u003d nowY - y;\\n\\t\\t\\n\\t\\tx \\u003d nowX; y \\u003d nowY;\\n\\n      %s\\n\\t\\t\\n\\t\\tbreak;\\n\\t\\t\\n\\t\\tdefault:\\n\\t\\t\\n\\t\\tbreak;\\n\\t\\t\\n\\t}\\n\\t\\n\\treturn true;\\n\\t\\n}\\n\\n}\",\"headerSpec\":\"### On Touched\",\"var\":\"FloatWindowFix\",\"icon\":\"2131165565\",\"name\":\"OnTouchedListener\",\"listener\":\"Floating Window 2\",\"description\":\"OnTouch\",\"parameters\":\"\"},{\"code\":\"public void closes(){\\n\\ntry{\\n\\t%s\\n\\t\\n}\\n\\ncatch(Exception e){\\n\\t\\n}\\n\\n}\",\"headerSpec\":\"### On Close\",\"var\":\"FloatWindowFix\",\"icon\":\"2131165455\",\"name\":\"On Close\",\"listener\":\"Floating Window 2\",\"description\":\"OnClose\",\"parameters\":\"\"},{\"code\":\"private void changed() {\\n%s\\n}\",\"headerSpec\":\"on ### try to change volume\",\"var\":\"AudioManager\",\"icon\":\"2131165975\",\"name\":\"OnChanged\",\"listener\":\"AudioManager\",\"description\":\"Just when You changed The Volume By your app\\nthe event will happen\",\"parameters\":\"\"},{\"code\":\"public void _Connected () {\\n%s\\n}\",\"headerSpec\":\"IF THE DEVICE IS CONNECTED THEN\",\"var\":\"InstagramDownloader\",\"icon\":\"2131165593\",\"name\":\"OnConnected\",\"listener\":\"Instagram\",\"description\":\"To Check If Device If Connected\",\"parameters\":\"\"},{\"code\":\"public void _NotConnected () {\\n%s\\n}\",\"headerSpec\":\"IF DEVICE IS CONNECTED THEN\",\"var\":\"InstagramDownloader\",\"icon\":\"2131165575\",\"name\":\"OnNotConnected\",\"listener\":\"Instagram\",\"description\":\"To Check If Device Is Connected !\",\"parameters\":\"\"},{\"code\":\"%s\",\"headerSpec\":\"### On Try to download\",\"var\":\"InstagramDownloader\",\"icon\":\"2131165538\",\"name\":\"TryDownload\",\"listener\":\"Instagram//ArabWare\",\"description\":\"Start\",\"parameters\":\"\"},{\"code\":\"public class TextViewUndoRedo {\\n\\t\\n\\tprivate boolean mIsUndoOrRedo \\u003d false;\\n\\tprivate EditHistory mEditHistory;\\n\\tprivate EditTextChangeListener mChangeListener;\\n\\tprivate TextView mTextView;\\n\\n\\t\\n\\tpublic TextViewUndoRedo(TextView textView) {\\n\\t\\tmTextView \\u003d textView;\\n\\t\\tmEditHistory \\u003d new EditHistory();\\n\\t\\tmChangeListener \\u003d new EditTextChangeListener();\\n\\t\\tmTextView.addTextChangedListener(mChangeListener);\\n\\t}\\n\\n\\tpublic void disconnect() {\\n\\t\\tmTextView.removeTextChangedListener(mChangeListener);\\n\\t}\\n\\n\\tpublic void setMaxHistorySize(int maxHistorySize) {\\n\\t\\tmEditHistory.setMaxHistorySize(maxHistorySize);\\n\\t}\\n\\n\\tpublic void clearHistory() {\\n\\t\\tmEditHistory.clear();\\n\\t}\\n\\n\\t\\n\\tpublic boolean getCanUndo() {\\n\\t\\treturn (mEditHistory.mmPosition \\u003e 0);\\n\\t}\\n\\n\\tpublic void undo() {\\n\\t\\tEditItem edit \\u003d mEditHistory.getPrevious();\\n\\t\\tif (edit \\u003d\\u003d null) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tEditable text \\u003d mTextView.getEditableText();\\n\\t\\tint start \\u003d edit.mmStart;\\n\\t\\tint end \\u003d start + (edit.mmAfter !\\u003d null ? edit.mmAfter.length() : 0);\\n\\n\\t\\tmIsUndoOrRedo \\u003d true;\\n\\t\\ttext.replace(start, end, edit.mmBefore);\\n\\t\\tmIsUndoOrRedo \\u003d false;\\n\\n\\t\\tfor (Object o : text.getSpans(0, text.length(), android.text.style.UnderlineSpan.class)) {\\n\\t\\t\\ttext.removeSpan(o);\\n\\t\\t}\\n\\n\\t\\tSelection.setSelection(text, edit.mmBefore \\u003d\\u003d null ? start\\n\\t\\t\\t\\t: (start + edit.mmBefore.length()));\\n\\t}\\n\\n\\tpublic boolean getCanRedo() {\\n\\t\\treturn (mEditHistory.mmPosition \\u003c mEditHistory.mmHistory.size());\\n\\t}\\n\\n\\tpublic void redo() {\\n\\t\\tEditItem edit \\u003d mEditHistory.getNext();\\n\\t\\tif (edit \\u003d\\u003d null) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tEditable text \\u003d mTextView.getEditableText();\\n\\t\\tint start \\u003d edit.mmStart;\\n\\t\\tint end \\u003d start + (edit.mmBefore !\\u003d null ? edit.mmBefore.length() : 0);\\n\\n\\t\\tmIsUndoOrRedo \\u003d true;\\n\\t\\ttext.replace(start, end, edit.mmAfter);\\n\\t\\tmIsUndoOrRedo \\u003d false;\\n\\n\\t\\tfor (Object o : text.getSpans(0, text.length(), android.text.style.UnderlineSpan.class)) {\\n\\t\\t\\ttext.removeSpan(o);\\n\\t\\t}\\n\\n\\t\\tSelection.setSelection(text, edit.mmAfter \\u003d\\u003d null ? start\\n\\t\\t\\t\\t: (start + edit.mmAfter.length()));\\n\\t}\\n\\n\\tpublic void storePersistentState(android.content.SharedPreferences.Editor editor, String prefix) {\\n\\n\\t\\teditor.putString(prefix + \\\".hash\\\",\\n\\t\\t\\t\\tString.valueOf(mTextView.getText().toString().hashCode()));\\n\\t\\teditor.putInt(prefix + \\\".maxSize\\\", mEditHistory.mmMaxHistorySize);\\n\\t\\teditor.putInt(prefix + \\\".position\\\", mEditHistory.mmPosition);\\n\\t\\teditor.putInt(prefix + \\\".size\\\", mEditHistory.mmHistory.size());\\n\\n\\t\\tint i \\u003d 0;\\n\\t\\tfor (EditItem ei : mEditHistory.mmHistory) {\\n\\t\\t\\tString pre \\u003d prefix + \\\".\\\" + i;\\n\\n\\t\\t\\teditor.putInt(pre + \\\".start\\\", ei.mmStart);\\n\\t\\t\\teditor.putString(pre + \\\".before\\\", ei.mmBefore.toString());\\n\\t\\t\\teditor.putString(pre + \\\".after\\\", ei.mmAfter.toString());\\n\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\t}\\n\\n\\tpublic boolean restorePersistentState(SharedPreferences sp, String prefix)\\n\\t\\t\\tthrows IllegalStateException {\\n\\n\\t\\tboolean ok \\u003d doRestorePersistentState(sp, prefix);\\n\\t\\tif (!ok) {\\n\\t\\t\\tmEditHistory.clear();\\n\\t\\t}\\n\\n\\t\\treturn ok;\\n\\t}\\n\\n\\tprivate boolean doRestorePersistentState(SharedPreferences sp, String prefix) {\\n\\n\\t\\tString hash \\u003d sp.getString(prefix + \\\".hash\\\", null);\\n\\t\\tif (hash \\u003d\\u003d null) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\tif (Integer.valueOf(hash) !\\u003d mTextView.getText().toString().hashCode()) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tmEditHistory.clear();\\n\\t\\tmEditHistory.mmMaxHistorySize \\u003d sp.getInt(prefix + \\\".maxSize\\\", -1);\\n\\n\\t\\tint count \\u003d sp.getInt(prefix + \\\".size\\\", -1);\\n\\t\\tif (count \\u003d\\u003d -1) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tfor (int i \\u003d 0; i \\u003c count; i++) {\\n\\t\\t\\tString pre \\u003d prefix + \\\".\\\" + i;\\n\\n\\t\\t\\tint start \\u003d sp.getInt(pre + \\\".start\\\", -1);\\n\\t\\t\\tString before \\u003d sp.getString(pre + \\\".before\\\", null);\\n\\t\\t\\tString after \\u003d sp.getString(pre + \\\".after\\\", null);\\n\\n\\t\\t\\tif (start \\u003d\\u003d -1 || before \\u003d\\u003d null || after \\u003d\\u003d null) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\tmEditHistory.add(new EditItem(start, before, after));\\n\\t\\t}\\n\\n\\t\\tmEditHistory.mmPosition \\u003d sp.getInt(prefix + \\\".position\\\", -1);\\n\\t\\tif (mEditHistory.mmPosition \\u003d\\u003d -1) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn true;\\n\\t}\\n\\n\\tprivate final class EditHistory {\\n\\n\\t\\tprivate int mmPosition \\u003d 0;\\n\\t\\tprivate int mmMaxHistorySize \\u003d -1;\\n\\t\\tprivate final LinkedList\\u003cEditItem\\u003e mmHistory \\u003d new LinkedList\\u003cEditItem\\u003e();\\n\\t\\tprivate void clear() {\\n\\t\\t\\tmmPosition \\u003d 0;\\n\\t\\t\\tmmHistory.clear();\\n\\t\\t}\\n\\n\\t\\tprivate void add(EditItem item) {\\n\\t\\t\\twhile (mmHistory.size() \\u003e mmPosition) {\\n\\t\\t\\t\\tmmHistory.removeLast();\\n\\t\\t\\t}\\n\\t\\t\\tmmHistory.add(item);\\n\\t\\t\\tmmPosition++;\\n\\n\\t\\t\\tif (mmMaxHistorySize \\u003e\\u003d 0) {\\n\\t\\t\\t\\ttrimHistory();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tprivate void setMaxHistorySize(int maxHistorySize) {\\n\\t\\t\\tmmMaxHistorySize \\u003d maxHistorySize;\\n\\t\\t\\tif (mmMaxHistorySize \\u003e\\u003d 0) {\\n\\t\\t\\t\\ttrimHistory();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tprivate void trimHistory() {\\n\\t\\t\\twhile (mmHistory.size() \\u003e mmMaxHistorySize) {\\n\\t\\t\\t\\tmmHistory.removeFirst();\\n\\t\\t\\t\\tmmPosition--;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (mmPosition \\u003c 0) {\\n\\t\\t\\t\\tmmPosition \\u003d 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tprivate EditItem getPrevious() {\\n\\t\\t\\tif (mmPosition \\u003d\\u003d 0) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\t\\t\\tmmPosition--;\\n\\t\\t\\treturn mmHistory.get(mmPosition);\\n\\t\\t}\\n\\n\\t\\tprivate EditItem getNext() {\\n\\t\\t\\tif (mmPosition \\u003e\\u003d mmHistory.size()) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tEditItem item \\u003d mmHistory.get(mmPosition);\\n\\t\\t\\tmmPosition++;\\n\\t\\t\\treturn item;\\n\\t\\t}\\n\\t}\\n\\n\\tprivate final class EditItem {\\n\\t\\tprivate final int mmStart;\\n\\t\\tprivate final CharSequence mmBefore;\\n\\t\\tprivate final CharSequence mmAfter;\\n\\n\\t\\tpublic EditItem(int start, CharSequence before, CharSequence after) {\\n\\t\\t\\tmmStart \\u003d start;\\n\\t\\t\\tmmBefore \\u003d before;\\n\\t\\t\\tmmAfter \\u003d after;\\n\\t\\t}\\n\\t}\\n\\n\\tprivate final class EditTextChangeListener implements TextWatcher {\\n\\n\\t\\tprivate CharSequence mBeforeChange;\\n\\t\\tprivate CharSequence mAfterChange;\\n\\n\\t\\tpublic void beforeTextChanged(CharSequence s, int start, int count,\\n\\t\\t\\t\\tint after) {\\n\\t\\t\\tif (mIsUndoOrRedo) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tmBeforeChange \\u003d s.subSequence(start, start + count);\\n\\t\\t}\\n\\n\\t\\tpublic void onTextChanged(CharSequence s, int start, int before,\\n\\t\\t\\t\\tint count) {\\n\\t\\t\\tif (mIsUndoOrRedo) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tmAfterChange \\u003d s.subSequence(start, start + count);\\n\\t\\t\\tmEditHistory.add(new EditItem(start, mBeforeChange, mAfterChange));\\n\\t\\t}\\n\\n\\t\\tpublic void afterTextChanged(Editable s) {\\n\\t\\t}\\n\\t}\\n}\",\"headerSpec\":\"don\\u0027t put any blocks\",\"var\":\"UndoRedo\",\"icon\":\"2131165403\",\"name\":\"Enable UndoRedo\",\"listener\":\"UndoRedo\",\"description\":\"Enable UndoRedo\",\"parameters\":\"\"}"}]